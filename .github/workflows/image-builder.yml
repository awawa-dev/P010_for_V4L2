name: Build Image 

on: 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
      
    steps:
    
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install coreutils p7zip-full qemu-user-static

    - name: Checkout CustomPiOS
      uses: actions/checkout@v4.2.2
      with:
        repository: 'guysoft/CustomPiOS'
        path: CustomPiOS

    - name: Prepare HyperHDR module
      run: |
        cd CustomPiOS
        sudo bash -x src/make_custom_pi_os HyperHDR
        sudo chown -R runner HyperHDR        

    - name: Download Raspbian Image (64-bits)
      run: |
        mkdir -p CustomPiOS/HyperHDR/src/image-raspios_lite_arm64
        cd CustomPiOS/HyperHDR/src/image-raspios_lite_arm64
        wget -c --trust-server-names 'https://downloads.raspberrypi.org/raspios_lite_arm64_latest'
        echo "workspace_dir=CustomPiOS/HyperHDR/src/workspace-raspios_lite_arm64" >> $GITHUB_ENV
        echo "workspace_variant=raspios_lite_arm64" >> $GITHUB_ENV

    - name: Update HyperHDR modules
      run: | 
        cd CustomPiOS/HyperHDR/src
        echo 'export DIST_NAME=HyperHDR' > config
        echo 'export DIST_VERSION=${{ github.event.inputs.tags }}' >> config
        echo 'export MODULES="base(network,hyperhdr)"' >> config
        echo 'export RPI_IMAGER_NAME="${DIST_NAME} version ${DIST_VERSION}"' >> config
        echo 'export RPI_IMAGER_DESCRIPTION="Raspberry Pi OS with P010 patched kernel"' >> config
        echo 'export RPI_IMAGER_ICON="https://github.com/awawa-dev/HyperHDR/blob/master/resources/icons/hyperhdr-icon-32px.png"' >> config
        echo 'export BASE_IMAGE_ENLARGEROOT=2000' >> config
        echo 'export BASE_IMAGE_RESIZEROOT=200' >> config      
        cd modules/hyperhdr
        echo '#!/usr/bin/env bash'  > start_chroot_script
        echo 'set -x' >> start_chroot_script
        echo 'set -e' >> start_chroot_script
        echo 'source /common.sh' >> start_chroot_script
        echo 'type -p curl >/dev/null || apt install curl -y' >> start_chroot_script
        echo 'curl -fsSL https://awawa-dev.github.io/hyperhdr.public.apt.gpg.key | dd of=/usr/share/keyrings/hyperhdr.public.apt.gpg.key \' >> start_chroot_script
        echo '&& chmod go+r /usr/share/keyrings/hyperhdr.public.apt.gpg.key \' >> start_chroot_script
        echo '&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hyperhdr.public.apt.gpg.key] https://awawa-dev.github.io $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hyperhdr.list > /dev/null \' >> start_chroot_script
        echo 'apt-get update' >> start_chroot_script
        echo 'cd /tmp' >> start_chroot_script
        echo 'sudo apt install git bc bison flex libssl-dev bc make' >> start_chroot_script
        echo 'sudo wget https://raw.githubusercontent.com/RPi-Distro/rpi-source/master/rpi-source -O /usr/local/bin/rpi-source && sudo chmod +x /usr/local/bin/rpi-source && /usr/local/bin/rpi-source -q --tag-update' >> start_chroot_script
        echo 'yes "" | rpi-source --delete -d /tmp' >> start_chroot_script
        echo 'cd linux' >> start_chroot_script
        echo 'make prepare' >> start_chroot_script
        echo 'make -j $(nproc) SUBDIRS=drivers/media/usb/uvc modules' >> start_chroot_script
        echo 'sudo make -j $(nproc) SUBDIRS=drivers/media/usb/uvc modules_install' >> start_chroot_script
        echo 'sudo depmod' >> start_chroot_script
        echo 'touch /boot/ssh' >> start_chroot_script
        echo "echo -n 'pi:' > /boot/userconf" >> start_chroot_script
        echo "echo 'raspberry' | openssl passwd -6 -stdin >> /boot/userconf" >> start_chroot_script
        echo 'echo "HyperHDR" > /etc/hostname' >> start_chroot_script
        echo 'sed -i "s/raspberrypi/HyperHDR/" /etc/hosts' >> start_chroot_script
        echo 'sed -i "s/^#dtparam=spi=on.*/dtparam=spi=on/" /boot/config.txt' >> start_chroot_script
        echo 'sed -i "s/^#hdmi_force_hotplug=1.*/hdmi_force_hotplug=1/" /boot/config.txt' >> start_chroot_script
        chmod +x start_chroot_script

    - name: Build patched Raspberry Pi Image
      run: |
        sudo modprobe loop
        cd CustomPiOS/HyperHDR
        sudo bash -x src/build_dist ${{ env.workspace_variant }}

    - name: Copy output
      id: copy
      run: |
        IMAGE=RaspberryPiOS-P010-Image-${{ github.event.inputs.tags }}-${{ github.event.inputs.architecture }}
        cp ${{ env.workspace_dir }}/*.img $IMAGE.img
        xz -v9 $IMAGE.img
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    # artifact upload will take care of zipping for us
    - uses: actions/upload-artifact@v4.4.0
      with:
        name: ${{ steps.copy.outputs.image }}
        path: ${{ steps.copy.outputs.image }}.img.xz
